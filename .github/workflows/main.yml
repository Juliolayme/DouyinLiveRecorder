name: Record Douyin & Upload

on:
  workflow_dispatch:

jobs:
  record:
    runs-on: ubuntu-latest
    timeout-minutes: 480
    env:
      # üëâ ƒêi·ªÅn link stream c·ªë ƒë·ªãnh ·ªü ƒë√¢y (∆∞u ti√™n URL PC)
      STREAM_URL: "https://live.douyin.com/39766954060"
      #STREAM_URL: "https://vt.tiktok.com/ZSHtCwgrjPexM-nIsf8/"
      MAX_MINUTES: "480"
      PYTHONIOENCODING: "utf-8"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: docker build -t dlr:latest .

      - name: Prepare folders & config
        run: |
          mkdir -p downloads logs config
          # Ghi URL v√†o config/URL_config.ini (m·ªói d√≤ng 1 link)
          printf "%s\n" "$STREAM_URL" > config/URL_config.ini
          echo "Wrote config/URL_config.ini:"
          cat config/URL_config.ini

      - name: Run recorder (non-interactive; read URLs from config)
        run: |
          set -e
          timeout "$(( ${MAX_MINUTES} * 60 ))" \
            docker run --rm \
              -v "$PWD/downloads":/app/downloads \
              -v "$PWD/logs":/app/logs \
              -v "$PWD/config":/app/config \
              -e PYTHONIOENCODING="$PYTHONIOENCODING" \
              dlr:latest \
              bash -lc '
                echo "Booting recorder (config mode)..."
                # Ch·∫°y tr·ª±c ti·∫øp, ch∆∞∆°ng tr√¨nh s·∫Ω ƒë·ªçc /app/config/URL_config.ini
                python3 main.py || true
              '

      - name: List recorded files
        run: |
          echo "downloads:"
          ls -lah downloads || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: recording-${{ github.run_id }}
          path: |
            downloads/**/*
            logs/**/*
          if-no-files-found: warn
          compression-level: 0
